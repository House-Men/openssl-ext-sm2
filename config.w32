ARG_ENABLE('sm2', 'sm2 support', 'no');

if (PHP_SM2 != 'no') {
	CHECK_LIB("libcrypto.lib", "sm2", PHP_SM2);
	CHECK_LIB("libssl.lib", "sm2", PHP_SM2);
	var ret = SETUP_OPENSSL("openssl", PHP_SM2);
	if (ret > 0) {
	    EXTENSION('sm2', 'sm2.c', null, '/utf-8 /DZEND_ENABLE_STATIC_TSRMLS_CACHE=1');
		ADD_SOURCES("openssl_sm2",
		"sm2_java.c sm2_create_key_pair.c sm2_encrypt_and_decrypt.c sm2_sign_and_verify.c sm3_with_preprocess.c",
		"sm2");
		
		AC_DEFINE("HAVE_OPENSSL_EXT", PHP_OPENSSL_SHARED ? 0 : 1, "Have openssl");
		AC_DEFINE('HAVE_SM2', 1, 'sm2 support enabled');

		switch (ret) {
			/* Openssl 1.0.x and lower */
			case 1:
				AC_DEFINE("HAVE_DSA_DEFAULT_METHOD", 1);
				break;
			/* Openssl 1.1.x */
			case 2:
				break;
		}
	}
}
